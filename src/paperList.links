open import Mvu;
open import MvuHTML;
open import MvuAttrs;
open import MvuEvents;
open import MvuCommands;

#Model and Message definitions
typename Author = (email: String, name: String, affiliation: String, idNum: Int);
typename PaperResult = (title: String,
    paperid: Int,
    topic: String);
typename Filter = String;
typename Model = (filterType: String, filterDesc: String, results: [PaperResult]);

fun view(model) {
  var makerow = fun((result)) {
     a(href("/displayPaper?paperId=" ^^ intToString(result.paperid)), textNode("Title: " ^^  result.title ^^ " Topic: " ^^ result.topic ^^ "\n"))  
  };

  var keylist = MvuHTML.concatMap(makerow, model.results);
  div(a0, keylist) 
}
# a(href("/home"), textNode("Title: " ^^ a ^^" Topic: " ^^ b)) 

#Database
var db = database "links";
var papers = table "papers" with (title : String, paperid : Int, abstract : String, body : String, topic : String, conflicts : String) from db;

sig getInitialModel : () ~> Model
fun getInitialModel() {
  var allPapers = query flat { for (x <-- papers) [(title = x.title, paperid = x.paperid ,topic = x.topic)] };
  (filterType = "", filterDesc = "", results = allPapers)
}


fun mainPage() {
  var initialModel = getInitialModel();
  Mvu.runStatic("placeholder", initialModel, view);
      page
        <div id = "placeholder"></div>
}